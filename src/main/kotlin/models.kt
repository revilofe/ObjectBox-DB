import io.objectbox.annotation.Entity
import io.objectbox.annotation.Id
import java.util.*


@Entity
data class User @JvmOverloads constructor(
    @Id
    var id: Long = 0,
    var name: String? = null
)

@Entity
data class Note @JvmOverloads constructor(
    @Id
    var id: Long = 0,
    var text: String? = null,
    var comment: String? = null,
    var date: Date? = null,
)

@Entity
data class Person @JvmOverloads constructor(@Id var id:Long = 0,
                                            var name:String? = null,
                                            var age:Int = 0,
                                            var high:Int = 0)



/**
 * When using a data class, add default values for all parameters. This will ensure your data class will have a
 * constructor that can be called by ObjectBox. (Technically this is only required if adding properties to the class body,
 * like custom or transient properties or relations, but it's a good idea to do it always.)
 */

/**
 * Entities must also have a no-args constructor, or for better performance, a constructor with all properties as
 * arguments. In the above example, a default, no-args constructor is generated by the compiler.
 */

/**
 * Entities must have one ID property of type long (or Long in Kotlin). If you need to use other types,
 * like a String ID, (https://docs.objectbox.io/entity-annotations#object-ids-id) Also, it must have non-private
 * visibility (or non-private getter and setter methods).
 */
